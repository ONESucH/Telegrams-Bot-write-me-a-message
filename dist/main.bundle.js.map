{"version":3,"sources":["D:/frontend/telegram-bot-for-Angular5/src/$_lazy_route_resource lazy","D:/frontend/telegram-bot-for-Angular5/src/app/app-routing.module.ts","D:/frontend/telegram-bot-for-Angular5/src/app/app.component.html","D:/frontend/telegram-bot-for-Angular5/src/app/app.component.less","D:/frontend/telegram-bot-for-Angular5/src/app/app.component.ts","D:/frontend/telegram-bot-for-Angular5/src/app/app.module.ts","D:/frontend/telegram-bot-for-Angular5/src/environments/environment.ts","D:/frontend/telegram-bot-for-Angular5/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/frontend/telegram-bot-for-Angular5/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/frontend/telegram-bot-for-Angular5/src/app/app-routing.module.ts","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"max-size-widnow\\\">\\n    <div class=\\\"\\\">\\n\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Routing -->\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/frontend/telegram-bot-for-Angular5/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/frontend/telegram-bot-for-Angular5/src/app/app.component.less\n// module id = ../../../../../src/app/app.component.less\n// module chunks = main","import {Component} from '@angular/core';\nimport {Http} from '@angular/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n\n  private token: string = '456198924:AAGtULqrSKM6mbWY_Z2TK7PGPfwP2W6CZtA';\n\n  constructor(private http: Http) {\n    this.onLoading();\n  }\n\n  /* Получаем доступ к БОТУ и записываем данные в объект для дальнейшей работы */\n  onLoading() {\n    let methodName: string = 'getMe'; // Название Метода\n\n    this.http.get('https://api.telegram.org/bot' + this.token + '/' + methodName)\n      .subscribe(\n        data => {\n\n          let parsingResponseJson = data.json(),\n            result = parsingResponseJson.result; // Сократим до результата\n\n          /* Записываем данные об пользователе */\n          let saveUserData = {  // Будем записывать данные об пользователе\n            id: Number(result.id), // Id Чата\n            is_bot: result.is_bot, // Бот ли это? true - да\n            first_name: result.first_name, // Имя бота или пользователя\n            username: result.username, // Имя чата\n          };\n\n          this.getInformationChat(); // Зарпашиваем доступ к приложению\n          this.pasteMessage(saveUserData); // Если всё хорошо запускаем дальше\n        },\n        error => {\n          console.log('%c ' + 'error', 'background:red;border-radius:10px;color:#fff;text-shadow: 0 0 5px red;padding-right:5px;', error)\n        })\n  }\n\n  /* Получаем ID чата для работы с сообщениями !important */\n  getInformationChat() { // Получили информацио об приложении\n\n    let methodName: string = 'getUpdates'; // Название метода\n\n    this.http.get('https://api.telegram.org/bot' + this.token + '/' + methodName + '')\n      .subscribe(\n        data => {\n\n          const responce = data.json();\n\n            this.pasteMessage(responce);\n        },\n        error => console.log('%c ' + 'error', 'background:silver;border-radius:10px;color:#fff;text-shadow: 0 0 5px red;padding-right:5px;', error),\n      );\n  }\n\n  /* Отправляем сообщения */\n  pasteMessage(saveDataUser) {\n\n    /* Получили доступ к чату, пробуем отправлять сообщения */\n    if (saveDataUser.ok === true) {\n\n      let methodName: string = 'sendMessage', // Название Типа\n        postMessage: string = 'Мой бот готов отправлять сообщения!'; // Сообщение которое полетит в группу(через бота)\n\n      this.http.get('https://api.telegram.org/bot' + this.token + '/' + methodName + '?chat_id=' + Number(saveDataUser.result[0].message.from.id) + '&text=' + postMessage) // chat_id = Строка или Число, будет в json когда вступит в групповой чат\n        .subscribe(\n          data => {\n\n            let responce = data.json();\n\n            console.log(responce);\n\n          },\n          error => console.log('%c ' + 'error', 'background:silver;border-radius:10px;color:#fff;text-shadow: 0 0 5px red;padding-right:5px;', error)\n        );\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/frontend/telegram-bot-for-Angular5/src/app/app.component.ts","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppRoutingModule} from './app-routing.module'; // Роутинг\nimport {HttpModule} from '@angular/http'; // Для запроса GET, POST ...\n\nimport {AppComponent} from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule, // Роутинг\n    HttpModule // Для запроса GET, POST ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/frontend/telegram-bot-for-Angular5/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// D:/frontend/telegram-bot-for-Angular5/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// D:/frontend/telegram-bot-for-Angular5/src/main.ts"],"sourceRoot":"webpack:///"}